[{"C:\\xampp\\htdocs\\react_auth\\src\\index.js":"1","C:\\xampp\\htdocs\\react_auth\\src\\App.js":"2","C:\\xampp\\htdocs\\react_auth\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\react_auth\\src\\store\\AuthContext.js":"4","C:\\xampp\\htdocs\\react_auth\\src\\pages\\ProfilePage.js":"5","C:\\xampp\\htdocs\\react_auth\\src\\pages\\IndexPage.js":"6","C:\\xampp\\htdocs\\react_auth\\src\\pages\\LoginPage.js":"7","C:\\xampp\\htdocs\\react_auth\\src\\pages\\SignupPage.js":"8","C:\\xampp\\htdocs\\react_auth\\src\\components\\Layout\\Layout.js":"9","C:\\xampp\\htdocs\\react_auth\\src\\components\\Users\\Profile.js":"10","C:\\xampp\\htdocs\\react_auth\\src\\components\\Home\\Home.js":"11","C:\\xampp\\htdocs\\react_auth\\src\\components\\Auth\\SignupForm.js":"12","C:\\xampp\\htdocs\\react_auth\\src\\components\\Auth\\LoginForm.js":"13","C:\\xampp\\htdocs\\react_auth\\src\\components\\Layout\\MainHeader.js":"14","C:\\xampp\\htdocs\\react_auth\\src\\components\\Layout\\Navigation.js":"15","C:\\xampp\\htdocs\\react_auth\\src\\components\\UI\\Card\\Card.js":"16","C:\\xampp\\htdocs\\react_auth\\src\\components\\UI\\Button\\Button.js":"17","C:\\xampp\\htdocs\\react_auth\\src\\pages\\ChangePasswordPage.js":"18","C:\\xampp\\htdocs\\react_auth\\src\\components\\Auth\\ChangePasswordForm.js":"19","C:\\xampp\\htdocs\\react_auth\\src\\components\\Todos\\TodosList.js":"20"},{"size":365,"mtime":1624940866535,"results":"21","hashOfConfig":"22"},{"size":1557,"mtime":1625012801970,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1624414738075,"results":"24","hashOfConfig":"22"},{"size":962,"mtime":1624940866564,"results":"25","hashOfConfig":"22"},{"size":138,"mtime":1624940866555,"results":"26","hashOfConfig":"22"},{"size":120,"mtime":1624940866544,"results":"27","hashOfConfig":"22"},{"size":137,"mtime":1624940866544,"results":"28","hashOfConfig":"22"},{"size":142,"mtime":1624940866555,"results":"29","hashOfConfig":"22"},{"size":266,"mtime":1624940866434,"results":"30","hashOfConfig":"22"},{"size":1504,"mtime":1625012843989,"results":"31","hashOfConfig":"22"},{"size":274,"mtime":1624940866425,"results":"32","hashOfConfig":"22"},{"size":3033,"mtime":1624947029614,"results":"33","hashOfConfig":"22"},{"size":2502,"mtime":1624954128004,"results":"34","hashOfConfig":"22"},{"size":317,"mtime":1624940866444,"results":"35","hashOfConfig":"22"},{"size":1516,"mtime":1625010475581,"results":"36","hashOfConfig":"22"},{"size":229,"mtime":1624940866490,"results":"37","hashOfConfig":"22"},{"size":371,"mtime":1624940866475,"results":"38","hashOfConfig":"22"},{"size":183,"mtime":1624947133842,"results":"39","hashOfConfig":"22"},{"size":2840,"mtime":1625007188932,"results":"40","hashOfConfig":"22"},{"size":1597,"mtime":1625059865193,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"36825o",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},"C:\\xampp\\htdocs\\react_auth\\src\\index.js",[],"C:\\xampp\\htdocs\\react_auth\\src\\App.js",["89"],"import React, { Fragment, useContext } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport Layout from './components/Layout/Layout';\r\nimport IndexPage from './pages/IndexPage';\r\nimport LoginPage from './pages/LoginPage';\r\nimport SignupPage from './pages/SignupPage';\r\nimport ProfilePage from './pages/ProfilePage';\r\nimport ChangePasswordPage from './pages/ChangePasswordPage';\r\nimport TodosList from './components/Todos/TodosList';\r\n\r\nimport AuthContext from './store/AuthContext';\r\n\r\nfunction App() {\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  return (\r\n    <Layout>\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <IndexPage />\r\n        </Route>\r\n        <Route path=\"/signup\">\r\n          {authCtx.isLoggedIn && <Redirect to=\"/\" />}\r\n          {!authCtx.isLoggedIn && <SignupPage />}\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          {authCtx.isLoggedIn && <Redirect to=\"/\" />}\r\n          {!authCtx.isLoggedIn && <LoginPage />}\r\n        </Route>\r\n        <Route path=\"/changePass\">\r\n          {!authCtx.isLoggedIn && <Redirect to=\"/\" />}\r\n          {authCtx.isLoggedIn && <ChangePasswordPage />}\r\n        </Route>\r\n        <Route path=\"/todosList\">\r\n          {!authCtx.isLoggedIn && <Redirect to=\"/\" />}\r\n          {authCtx.isLoggedIn && <TodosList />}\r\n        </Route>\r\n        <Route path=\"/profile\">\r\n          {!authCtx.isLoggedIn && <Redirect to=\"/\" />}\r\n          {authCtx.isLoggedIn && <ProfilePage />}\r\n        </Route>\r\n      </Switch>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\xampp\\htdocs\\react_auth\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\react_auth\\src\\store\\AuthContext.js",[],"C:\\xampp\\htdocs\\react_auth\\src\\pages\\ProfilePage.js",[],"C:\\xampp\\htdocs\\react_auth\\src\\pages\\IndexPage.js",[],"C:\\xampp\\htdocs\\react_auth\\src\\pages\\LoginPage.js",[],"C:\\xampp\\htdocs\\react_auth\\src\\pages\\SignupPage.js",[],"C:\\xampp\\htdocs\\react_auth\\src\\components\\Layout\\Layout.js",[],"C:\\xampp\\htdocs\\react_auth\\src\\components\\Users\\Profile.js",["90","91"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport axios from \"axios\";\r\n\r\nimport Card from \"../UI/Card/Card\";\r\nimport classes from \"./Profile.module.css\";\r\nimport AuthContext from \"../../store/AuthContext\";\r\n\r\nconst Profile = () => {\r\n    const [user, setUser] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const authCtx = useContext(AuthContext);\r\n    const token = authCtx.token;\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:5151/profile', {\r\n            headers: {\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n            .then(response => {\r\n                setUser(response.data.data);\r\n                setError(null);\r\n            })\r\n            .catch((error) => {\r\n                if (error.response) {\r\n                    if (error.response.status == 401) {\r\n                        history.push(\"/login\");\r\n                        return;\r\n                    }\r\n                }\r\n                setError(error.message);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <Card className={classes.profile}>\r\n            <h1>User Profile</h1>\r\n            {error && <p>{error}</p>}\r\n            {!!user &&\r\n                <div>\r\n                    <p>Name: {user.fullname}</p>\r\n                    <p>Email: {user.email}</p>\r\n                </div>\r\n            }\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\xampp\\htdocs\\react_auth\\src\\components\\Home\\Home.js",[],"C:\\xampp\\htdocs\\react_auth\\src\\components\\Auth\\SignupForm.js",["92","93","94"],"import React, { useState, useRef, useEffect, useReducer, Fragment } from 'react';\r\n\r\nimport Card from '../UI/Card/Card';\r\nimport classes from './Auth.module.css';\r\nimport Button from '../UI/Button/Button';\r\n\r\nconst SignupForm = () => {\r\n  const [isFormValid, setIsFormValid] = useState(false);\r\n  const [isShowForm, setShowForm] = useState(true);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const emailInput = useRef();\r\n  const fullnameInput = useRef();\r\n  const passwordInput = useRef();\r\n\r\n  const checkFromValidHandler = () => {\r\n    if (emailInput.current.value === \"\" ||\r\n      fullnameInput.current.value === \"\" ||\r\n      passwordInput.current.value === \"\") {\r\n      setIsFormValid(false);\r\n      return;\r\n    }\r\n    setIsFormValid(true);\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!isFormValid) {\r\n      return;\r\n    }\r\n    const signupAPI = 'http://localhost:5151/signup';\r\n    const signupData = {\r\n      email: emailInput.current.value,\r\n      fullname: fullnameInput.current.value,\r\n      password: passwordInput.current.value,\r\n    };\r\n    fetch(signupAPI, {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Typet': 'application/json',\r\n      },\r\n      body: JSON.stringify(signupData),\r\n    })\r\n      .then(response => {\r\n        if (response.status == 200) {\r\n          setMessage(\"Signup successfully\");\r\n          setShowForm(false);\r\n          return;\r\n        }\r\n        setMessage(\"Signup failed, please check information!\");\r\n      })\r\n      .catch((error) => {\r\n        setMessage(error.message);\r\n      });\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card className={classes.auth}>\r\n        {message != null && <p className={classes.error}>{message}</p>}\r\n        {isShowForm &&\r\n          <form onSubmit={submitHandler}>\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                ref={emailInput}\r\n                onChange={checkFromValidHandler}\r\n              />\r\n            </div>\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"fullname\">Full name</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"fullname\"\r\n                ref={fullnameInput}\r\n                onChange={checkFromValidHandler}\r\n              />\r\n            </div>\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                ref={passwordInput}\r\n                onChange={checkFromValidHandler}\r\n              />\r\n            </div>\r\n            <div className={classes.actions}>\r\n              <Button type=\"submit\" className={classes.btn} disabled={!isFormValid}>\r\n                Signup\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        }\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","C:\\xampp\\htdocs\\react_auth\\src\\components\\Auth\\LoginForm.js",["95","96"],"import React, { useState, useEffect, useReducer, useRef, useContext } from 'react';\r\n\r\nimport Card from '../UI/Card/Card';\r\nimport classes from './Auth.module.css';\r\nimport Button from '../UI/Button/Button';\r\n\r\nimport AuthContext from '../../store/AuthContext';\r\n\r\nconst LoginForm = () => {\r\n  const [formIsValid, setformIsValid] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const emailInput = useRef();\r\n  const passwordInput = useRef();\r\n\r\n  const checkFormValidHandler = () => {\r\n    if (emailInput.current.value === \"\" ||\r\n      passwordInput.current.value === \"\") {\r\n      setformIsValid(false);\r\n      return;\r\n    }\r\n    setformIsValid(true);\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n    const email = emailInput.current.value;\r\n    const password = passwordInput.current.value;\r\n    const signupAPI = `http://localhost:5151/login?email=${email}&password=${password}`;\r\n    fetch(signupAPI)\r\n      .then(response => {\r\n        if (response.status !== 200) {\r\n          throw new Error(\"Your email or password is invalid!\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        authCtx.login(data.data);\r\n      })\r\n      .catch((error) => {\r\n        setMessage(error.message);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.auth}>\r\n      {message && <p className={classes.error}>{message}</p>}\r\n      {authCtx.isLoggedIn && <p className={classes.success}>Login successfully.</p>}\r\n      {!authCtx.isLoggedIn &&\r\n        <form onSubmit={submitHandler}>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              ref={emailInput}\r\n              onChange={checkFormValidHandler}\r\n            />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              ref={passwordInput}\r\n              onChange={checkFormValidHandler}\r\n            />\r\n          </div>\r\n          <div className={classes.actions}>\r\n            <Button type=\"submit\" className={classes.btn} sisabled={!formIsValid}>\r\n              Login\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      }\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","C:\\xampp\\htdocs\\react_auth\\src\\components\\Layout\\MainHeader.js",[],"C:\\xampp\\htdocs\\react_auth\\src\\components\\Layout\\Navigation.js",[],["97","98"],"C:\\xampp\\htdocs\\react_auth\\src\\components\\UI\\Card\\Card.js",[],"C:\\xampp\\htdocs\\react_auth\\src\\components\\UI\\Button\\Button.js",[],"C:\\xampp\\htdocs\\react_auth\\src\\pages\\ChangePasswordPage.js",[],"C:\\xampp\\htdocs\\react_auth\\src\\components\\Auth\\ChangePasswordForm.js",["99"],"import React, { useState, useRef, Fragment, useContext } from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport Card from '../UI/Card/Card';\r\nimport classes from './Auth.module.css';\r\nimport Button from '../UI/Button/Button';\r\nimport AuthContext from \"../../store/AuthContext\";\r\n\r\nconst ChangePasswordForm = () => {\r\n    const [formIsValid, setformIsValid] = useState(false);\r\n    const [isShowForm, setShowForm] = useState(true);\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const authCtx = useContext(AuthContext);\r\n    const token = authCtx.token;\r\n\r\n    const passwordInput = useRef();\r\n\r\n    const checkFormValidHandler = () => {\r\n        if (passwordInput === \"\") {\r\n            setformIsValid(false);\r\n            return;\r\n        }\r\n        setformIsValid(true);\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (!formIsValid) {\r\n            return;\r\n        }\r\n        const changePwAPI = `http://localhost:5151/change_password`;\r\n        console.log(passwordInput.current.value);\r\n        axios.post(changePwAPI,\r\n            {\r\n                \"new_password\": passwordInput.current.value\r\n            },\r\n            {\r\n                headers: {\r\n                    \"Authorization\": token\r\n                },\r\n            }\r\n        )\r\n            .then(response => {\r\n                if (response.status == 200) {\r\n                    setMessage(\"Change password successfully\");\r\n                    setShowForm(false);\r\n                    return;\r\n                }\r\n                setMessage(\"Change password failed, please check information!\");\r\n            })\r\n            .catch((error) => {\r\n                setMessage(error.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Card className={classes.auth}>\r\n                {message != null && <p className={classes.error}>{message}</p>}\r\n                {isShowForm &&\r\n                    <form onSubmit={submitHandler}>\r\n                        <div className={classes.control}>\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                ref={passwordInput}\r\n                                onChange={checkFormValidHandler}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.actions}>\r\n                            <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\r\n                                Change password\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                }\r\n            </Card>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ChangePasswordForm;\r\n","C:\\xampp\\htdocs\\react_auth\\src\\components\\Todos\\TodosList.js",["100","101","102","103"],"import axios from \"axios\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Card from \"../UI/Card/Card\";\r\nimport classes from \"./TodosList.module.css\";\r\nimport AuthContext from \"../../store/AuthContext\";\r\n\r\nconst TodosList = () => {\r\n    const [todos, setTodos] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const authCtx = useContext(AuthContext);\r\n    const history = useHistory();\r\n    const token = authCtx.token;\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:5151/todos', {\r\n            headers: {\r\n                \"Authorization\": token\r\n            }\r\n        })\r\n            .then(response => {\r\n                setTodos(response.data.data);\r\n                setError(null);\r\n                console.log(response.data.data);\r\n            })\r\n            .catch((error) => {\r\n                if (error.response) {\r\n                    if (error.response.status == 401) {\r\n                        history.push(\"/login\");\r\n                        return;\r\n                    }\r\n                }\r\n                setError(error.data);\r\n            });\r\n    }, []);\r\n\r\n    let todosList = <p>No Todo</p>\r\n    if (todos != null) {\r\n        todosList = todos.map((todo) => (\r\n            <li className={classes.todo}>\r\n                <h2>{todo.title}</h2>\r\n                <p>{todo.description}</p>\r\n            </li>\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <ul className={classes[\"todos-list\"]}>\r\n            {todosList}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodosList;\r\n\r\n",{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"108","severity":1,"message":"109","line":28,"column":47,"nodeType":"110","messageId":"111","endLine":28,"endColumn":49},{"ruleId":"112","severity":1,"message":"113","line":35,"column":8,"nodeType":"114","endLine":35,"endColumn":10,"suggestions":"115"},{"ruleId":"104","severity":1,"message":"116","line":1,"column":35,"nodeType":"106","messageId":"107","endLine":1,"endColumn":44},{"ruleId":"104","severity":1,"message":"117","line":1,"column":46,"nodeType":"106","messageId":"107","endLine":1,"endColumn":56},{"ruleId":"108","severity":1,"message":"109","line":45,"column":29,"nodeType":"110","messageId":"111","endLine":45,"endColumn":31},{"ruleId":"104","severity":1,"message":"116","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"117","line":1,"column":38,"nodeType":"106","messageId":"107","endLine":1,"endColumn":48},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"108","severity":1,"message":"109","line":45,"column":37,"nodeType":"110","messageId":"111","endLine":45,"endColumn":39},{"ruleId":"104","severity":1,"message":"122","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":12},{"ruleId":"104","severity":1,"message":"123","line":10,"column":12,"nodeType":"106","messageId":"107","endLine":10,"endColumn":17},{"ruleId":"108","severity":1,"message":"109","line":28,"column":47,"nodeType":"110","messageId":"111","endLine":28,"endColumn":49},{"ruleId":"112","severity":1,"message":"113","line":35,"column":8,"nodeType":"114","endLine":35,"endColumn":10,"suggestions":"124"},"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["125"],"'useEffect' is defined but never used.","'useReducer' is defined but never used.","no-native-reassign",["126"],"no-negated-in-lhs",["127"],"'Card' is defined but never used.","'error' is assigned a value but never used.",["128"],{"desc":"129","fix":"130"},"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"131"},"Update the dependencies array to be: [history, token]",{"range":"132","text":"133"},{"range":"134","text":"133"},[1124,1126],"[history, token]",[1174,1176]]